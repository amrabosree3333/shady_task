/// <reference types="node" />
import { BinaryLike } from 'crypto';
import { PrivateRSAKey, PublicRSAKey } from './lib/sign';
import { BlindResult } from './lib/blind';
export { longHash } from './lib/hash';
export { PrivateRSAKey, PublicRSAKey } from './lib/sign';
export { BlindResult, getBlindingFactor } from './lib/blind';
export declare type hexString = string;
export declare function hashAndBlindMessage(key: PublicRSAKey, message: BinaryLike): BlindResult;
export declare function signBlindedMessageHash(key: PrivateRSAKey, blindedMessageHash: hexString): hexString;
export declare function unblindSignature(key: PublicRSAKey, blindSignature: hexString, blindingFactor: hexString): hexString;
export declare function verifySignature(key: PublicRSAKey, message: BinaryLike, signature: hexString): boolean;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsbn_1 = require("jsbn");
const blind_1 = require("./blind");
const hash_1 = require("./hash");
function sign(key, blindedMessageHash) {
    const timingBlinding = blind_1.getBlindingFactor(key.n);
    const blindedMessageHashInt = new jsbn_1.BigInteger(blindedMessageHash, 16);
    const timingBlindingE = timingBlinding.modPowInt(key.e, key.n);
    const timingBlindedMessageHash = timingBlindingE
        .multiply(blindedMessageHashInt)
        .mod(key.n);
    const timingBlindingInverse = timingBlinding.modInverse(key.n);
    const timingBlindedSignature = timingBlindedMessageHash
        .modPow(key.d, key.n);
    const blindSignature = timingBlindedSignature
        .multiply(timingBlindingInverse)
        .mod(key.n)
        .toString(16);
    return blindSignature;
}
exports.sign = sign;
function verify(key, message, signature) {
    const hashedMessage = hash_1.longHash(key.n.bitLength(), message)
        .toString('hex');
    const modHashedMessage = new jsbn_1.BigInteger(hashedMessage, 16)
        .mod(key.n)
        .toString(16);
    const original = new jsbn_1.BigInteger(signature, 16)
        .modPowInt(key.e, key.n)
        .toString(16);
    return modHashedMessage === original;
}
exports.verify = verify;
